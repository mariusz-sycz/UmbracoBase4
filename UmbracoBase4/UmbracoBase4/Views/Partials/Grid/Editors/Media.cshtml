@model dynamic
@using Umbraco.Web.Templates
@functions
{
    public static Umbraco.Web.UmbracoHelper umbracoHelper = new Umbraco.Web.UmbracoHelper(Umbraco.Web.UmbracoContext.Current);
}
@if (Model.value != null)
{
    var url = Model.value.image;
    if (Model.editor.config != null && Model.editor.config.size != null)
    {
        url += "?width=" + Model.editor.config.size.width;
        url += "&height=" + Model.editor.config.size.height;

        if (Model.value.focalPoint != null)
        {
            url += "&center=" + Model.value.focalPoint.top + "," + Model.value.focalPoint.left;
            url += "&mode=crop";
        }
    }

    var altText = Model.value.altText ?? Model.value.caption ?? string.Empty;
    var image = umbracoHelper.TypedMedia((Udi)Model.value.udi);
    @Html.Partial("Partials/Amp/Image", new UmbracoBase4.Models.Amp.Image() { IsAmp = this.Request.Url.ToString().Contains("amp=true"), Src = url, Alt = altText, Width = image.GetPropertyValue<int>("UmbracoWidth"), Height = image.GetPropertyValue<int>("UmbracoHeight"), Static = false })
    if (Model.value.caption != null)
    {
        <p class="caption">@Model.value.caption</p>
    }
}
